version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: senseiweb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DATABASE_URL=postgres://postgres:postgres@db:5432/senseiweb
      - DEBUG=True
    volumes:
      - ./backend:/app
      - ./backend/filevault:/app/filevault
      - ./backend/filevault:/filevault
      - ./user-simulator:/user-simulator
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    command: >
      sh -c "uv run python manage.py migrate &&
             uv run python manage.py runserver 0.0.0.0:8000"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DATABASE_URL=postgres://postgres:postgres@db:5432/senseiweb
      - DEBUG=True
    volumes:
      - ./backend:/app
      - ./backend/filevault:/app/filevault
      - ./backend/filevault:/filevault
      - ./user-simulator:/user-simulator
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    command: uv run celery -A senseiweb worker -l info

volumes:
  rabbitmq_data:
  postgres_data:
