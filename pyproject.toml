[project]
name = "sensei-web"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "boto3>=1.38.30",
    "cryptography>=45.0.3",
    "django>=5.2.2",
    "django-cors-headers>=4.7.0",
    "django-rest-knox>=5.0.2",
    "djangorestframework>=3.16.0",
    "dotenv>=0.9.9",
    "jinja2>=3.1.6",
    "openai>=1.84.0",
    "pandas>=2.3.0",
    "pillow>=11.2.1",
    "psutil>=7.0.0",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "scikit-learn>=1.6.1",
    "tiktoken>=0.9.0",
    "tracer @ file:./tracer"
]

[build-system]
requires = ["setuptools>=61.0"] 
build-backend = "setuptools.build_meta"
backend-path = ["."] 

[tool.setuptools]
# This tells setuptools that the Python package(s) for 'sensei-web' are found in the 'backend' directory.
# Adjust if your main source directory for 'sensei-web' has a different name.
packages = ["backend"]

# Alternatively, for more complex scenarios or finer control (e.g., multiple top-level package directories for sensei-web):
# [tool.setuptools.packages.find]
# where = ["."]  # Look for packages in the project root ('.') or a specific directory like 'src'
# include = ["backend*"]  # Include 'backend' and any sub-packages (e.g., backend.api)
# exclude = ["frontend*", "tracer*", "tests*"] # Explicitly exclude other directories from this package
