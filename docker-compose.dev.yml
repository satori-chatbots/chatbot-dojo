version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI at http://localhost:15672 (guest/guest)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DEBUG=True
    volumes:
      - ./backend:/app
      - ./backend/filevault:/app/filevault
      - ./backend/filevault:/filevault
      - ./user-simulator:/user-simulator
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: >
      sh -c "uv run python manage.py migrate &&
             uv run python manage.py runserver 0.0.0.0:8000"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DEBUG=True
    volumes:
      - ./backend:/app
      - ./backend/filevault:/app/filevault
      - ./backend/filevault:/filevault
      - ./user-simulator:/user-simulator
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: uv run celery -A senseiweb worker -l info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: pnpm run dev
