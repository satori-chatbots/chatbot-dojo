services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: sensei_user_dev
      POSTGRES_PASSWORD: sensei_passwd_dev
      POSTGRES_DB: senseiweb_dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sensei_user_dev -d senseiweb_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    volumes:
      - rabbitmq_data_dev:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # All variables from .env.dev are now here
      DEBUG: "True"
      SECRET_KEY: "key-for-development"
      POSTGRES_DB: "senseiweb_dev"
      POSTGRES_USER: "sensei_user_dev"
      POSTGRES_PASSWORD: "sensei_passwd_dev"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
      RABBITMQ_USER: "admin"
      RABBITMQ_PASSWORD: "admin123"
      RABBITMQ_VHOST: "/"
      CELERY_RESULT_BACKEND: "rpc://"
      ALLOWED_HOSTS: "localhost,backend,127.0.0.1"
      CORS_ALLOWED_ORIGINS: "http://localhost,http://127.0.0.1,http://localhost:5173"
      FILEVAULT_ROOT: "/app/filevault"
      FERNET_SECRET_KEY: "BdznIW3fRh0e7BkFTStDex1gj6dbRDXm8c9Z_bPmt-Q="
      UV_CACHE_DIR: "/app/.uv-cache"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_venv:/app/.venv
      - filevault_data_dev:/app/filevault
      - ./user-simulator:/user-simulator
    user: "1000:1000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: sh -c "uv run python manage.py migrate && uv run python manage.py runserver 0.0.0.0:8000"

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # All variables from .env.dev are now here as well
      DEBUG: "True"
      SECRET_KEY: "key-for-development"
      POSTGRES_DB: "senseiweb_dev"
      POSTGRES_USER: "sensei_user_dev"
      POSTGRES_PASSWORD: "sensei_passwd_dev"
      POSTGRES_HOST: "db"
      POSTGRES_PORT: "5432"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_PORT: "5672"
      RABBITMQ_USER: "admin"
      RABBITMQ_PASSWORD: "admin123"
      RABBITMQ_VHOST: "/"
      CELERY_RESULT_BACKEND: "rpc://"
      ALLOWED_HOSTS: "localhost,backend,127.0.0.1"
      CORS_ALLOWED_ORIGINS: "http://localhost,http://127.0.0.1,http://localhost:5173"
      FILEVAULT_ROOT: "/app/filevault"
      FERNET_SECRET_KEY: "BdznIW3fRh0e7BkFTStDex1gj6dbRDXm8c9Z_bPmt-Q="
    volumes:
      - ./backend:/app
      - backend_venv:/app/.venv
      - filevault_data_dev:/app/filevault
      - ./user-simulator:/user-simulator
    user: "1000:1000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: uv run celery -A senseiweb worker -l info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data_dev:
  rabbitmq_data_dev:
  backend_venv:
  filevault_data_dev:
